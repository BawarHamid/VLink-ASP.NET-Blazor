@page "/minside"
@using Vikarlink.Shared.Dtos.OutgoingDtos;
@inject IVagtService vagtService
@inject IVikarService vikarService
@inject MudBlazor.ISnackbar sBar
@inject NavigationManager naviM
@inject AuthenticationStateProvider authState
@attribute [Authorize(Roles = "Admin, User")]

<PageTitle>VIKAREN|PROFIL</PageTitle>

<EditForm Model="vikarDto" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <div class="container-fluid">
        <div class="border container" style="padding: 60px">
            <div style="vertical-align: top;">
                <MudIcon Icon="@Icons.Filled.Person" Size="Size.Medium" Color="Color.Info"></MudIcon>
                <h5>Velkommen tilbage: @vikarDto.ForNavn @vikarDto.EfterNavn</h5>
                <h6>Her kan du se dine personlige oplysninger:</h6>
            </div>
            <br />
            <form class="row g-4">
                @*VikarId*@
                <div class="col-md-6">
                    <label for="idL" class="control-label">Id:</label>
                    <InputNumber id="idI" @bind-Value="vikarDto.Id" class="form-control" disabled="true"></InputNumber>
                    <ValidationMessage For="@(() => vikarDto.Id)" />
                </div>

                @*Fornavn*@
                <div class="col-md-6">
                    <label for="fornavnL" class="control-label">Fornavn:</label>
                    <InputText id="fornavnI" @bind-Value="vikarDto.ForNavn" class="form-control"></InputText>
                    <ValidationMessage For="@(() => vikarDto.ForNavn)" />
                </div>

                @*Efternavn*@
                <div class="col-md-6">
                    <label for="efterL" class="control-label">Efternavn:</label>
                    <InputText id="efterI" @bind-Value="vikarDto.EfterNavn" class="form-control"></InputText>
                    <ValidationMessage For="@(() => vikarDto.EfterNavn)" />
                </div>

                @*Adresse*@
                <div class="col-md-6">
                    <label for="fornavnL" class="control-label">Adresse:</label>
                    <InputText id="fornavnI" @bind-Value="vikarDto.Adresse" class="form-control"></InputText>
                     <ValidationMessage For="@(() => vikarDto.Adresse)" />
                </div>

                @*Telefon*@
                <div class="col-md-6">
                    <label for="fornavnL" class="control-label">Telefon:</label>
                    <InputText id="fornavnI" @bind-Value="vikarDto.Telefon" class="form-control"></InputText>
                    <ValidationMessage For="@(() => vikarDto.Telefon)" />
                </div>

                @*Email*@
                <div class="col-md-6">
                    <label for="fornavnL" class="control-label">Email:</label>
                    <InputText id="fornavnI" @bind-Value="vikarDto.Email" class="form-control"></InputText>
                    <ValidationMessage For="@(() => vikarDto.Email)" />
                </div>

                @*Username*@
                <div class="col-md-6">
                    <label for="fornavnL" class="control-label">Brugernavn:</label>
                    <InputText id="fornavnI" @bind-Value="vikarDto.Username" class="form-control" disabled="true"></InputText>
                    <ValidationMessage For="@(() => vikarDto.Username)" />
                </div>

                @*Password*@
                <div class="col-md-6">
                    <label for="fornavnL" class="control-label">Adgangskode:</label>
                    <InputText id="fornavnI" @bind-Value="vikarDto.Password" class="form-control" disabled="true"></InputText>
                    <ValidationMessage For="@(() => vikarDto.Password)" />
                </div>

                @*Dato oprettet*@
                <div class="col-md-6">
                    <label for="fornavnL" class="control-label">Oprettelsesdato:</label>
                    <InputDateTime id="fornavnI" @bind-Value="vikarDto.DatoOprettet" class="form-control" disabled="true"></InputDateTime>
                    <ValidationMessage For="@(() => vikarDto.DatoOprettet)" />
                </div>

                @*Dato ansættelse*@
                <div class="col-md-6">
                    <label for="fornavnL" class="control-label">Ansættelsesdato:</label>
                    <InputDateTime id="fornavnI" @bind-Value="vikarDto.AnsaettelsesDato" class="form-control" disabled="true"></InputDateTime>
                    <ValidationMessage For="@(() => vikarDto.AnsaettelsesDato)" />
                </div>
            </form>
            <br />
            <div class="submit" style="position:absolute">
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save" Color="Color.Warning" Size="Size.Large">Gem ænderinger</MudButton>
            </div>
            <div class="backTo" style="float: right">
            <MudButton @onclick="(() => GoToVagter())" Variant="Variant.Filled" StartIcon="@Icons.Filled.Work" Color="Color.Info" Size="Size.Large">Mine Vagter</MudButton>
            </div>
        </div>
    </div>
</EditForm>


@code {
    [Parameter]
    public int? Id { get; set; }
    private VikarQueryDto vikarDto { get; set; } = new VikarQueryDto();


    protected override async Task OnInitializedAsync()
    {
        var state = await authState.GetAuthenticationStateAsync();
        Id = int.Parse(state.User.Claims.Where(v => v.Type.Equals("vikarIdentifier")).Select(v => v.Value).FirstOrDefault());
        vikarDto = await vikarService.GetVikarAsync((int)Id);
        sBar.Add("HENTER DINE OPLYSNINGER...", Severity.Normal);
    }

    private async Task HandleSubmit()
    {
        await vikarService.UpdateVikarAsync(vikarDto.Id, vikarDto);
        sBar.Add("Vikaren er nu opdateret ", Severity.Warning);
    }

    private void GoToVagter()
    {
        naviM.NavigateTo("/minevagter");
    }
}
